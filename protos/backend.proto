syntax = "proto3";

package backend;

import "google/protobuf/timestamp.proto";

/*
Common prefix naming convention:
- Find: return one item by id
- Get: return multiple items by id and support pagination
- Search: return multiple items by combined non-id conditions
- Create: create new item and return
*/

service User {
  rpc SignIn (SignInRequest) returns (AuthenticatedInfo) {}
  rpc SignUp (SignUpRequest) returns (AuthenticatedInfo) {}
  rpc FindUser (FindUserRequest) returns (UserInfo) {}
  rpc GetUsers (GetUsersRequest) returns (UsersInfo) {}
  rpc SearchUser (SearchUserRequest) returns (UsersInfo) {}
}

service TwoFA {
  rpc GenerateSetting (Generate2FARequest) returns (Generate2FAResponse) {}
  rpc CreateSetting (Create2FARequest) returns (Create2FAResponse) {}
  rpc ValidateResource (Validate2FARequest) returns (Validate2FAResponse) {}
}

service Chat {
  rpc CreateConversation (CreateConversationRequest) returns (Conversation) {}
  rpc CreateChatMessage (CreateChatMessageRequest) returns (ChatMessage) {}
  rpc SearchConversations (SearchConversationsRequest) returns (SearchConversationsPaginationResponse) {}
  rpc FindConversation (FindConversationRequest) returns (Conversation) {}
  rpc GetChatMessage (GetChatMessageRequest) returns (GetChatMessagesPaginationResponse) {}
}

message Token {
  required string accessToken = 1;
  required string refreshToken = 2;
}

message UserInfo {
  required string id = 1;
  required string avatar = 2;
  required string username = 3;
  required string displayName = 4;
}

message AuthenticatedInfo {
  required UserInfo userInfo = 1;
  required Token token = 2;
}

message SignInRequest {
  required string username = 1;
  required string password = 2;
}

message SignUpRequest {
  required string username = 1;
  required string password = 2;
  required string displayName = 3;
  required string avatarURL = 4;
}

message GetUsersRequest {
  repeated string userIds = 1;
}

message FindUserRequest {
  required string userId = 1;
}

message SearchUserRequest {
  required string term = 1;
  optional int32 pageNumber = 2;
  optional int32 pageSize = 3;
}

message UsersInfo {
  repeated UserInfo users = 1;
}

message ChatMessage {
  required string id = 1;
  required string conversationId = 2;
  required string fromUserId = 3;
  required string messageContent = 4;
  required google.protobuf.Timestamp createdAt = 5;
}

enum ConversationType {
  PRIVATE = 1;
  GROUP = 2;
}

message FindConversationRequest {
  required string conversationId = 1;
  required int32 messagePage = 2;
  required int32 messageLimit = 3;
}

message CreateConversationRequest {
  optional string ownerId = 1;
  optional string name = 2;
  required ConversationType type = 3;
  repeated string memberIds = 4;
}

message CreateChatMessageRequest {
  required string conversationId = 1;
  required string fromUserId = 2;
  required string messageContent = 3;
}

message Conversation {
  required string id = 1;
  required ConversationType type = 2;
  required string name = 3;
  repeated string memberIds = 4;
  repeated ChatMessage messages = 5;
  required google.protobuf.Timestamp createdAt = 6;
}

message SearchConversationsRequest {
  optional ConversationType type = 1;
  repeated string memberIds = 2;
  optional string term = 3;
  optional int32 page = 4;
  optional int32 limit = 5;
  required int32 messageLimit = 6;
}

message SearchConversationsPaginationResponse {
  repeated Conversation conversations = 1;
}

message GetChatMessageRequest {
  required string conversationId = 1;
  optional int32 page = 2;
  optional int32 limit = 3;
}

message GetChatMessagesPaginationResponse {
  repeated ChatMessage messages = 1;
}

message Generate2FARequest {
  required string label = 1;
}

message Generate2FAResponse {
  required string secret = 1;
  required string qrCode = 2;
}

message Create2FARequest {
  required string resourceId = 1;
  required string label = 2;
  required string secret = 3;
  required string otp = 4;
}

message Create2FAResponse {
  required string resourceId = 1;
}

message Validate2FARequest {
  required string resourceId = 1;
  required string otp = 2;
}

message Validate2FAResponse {
  required bool success = 1;
  required string status = 2;
}
